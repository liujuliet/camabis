!function(){"use strict";angular.module("app",["firebase","myApp.config","ngAnimate","ngRoute","vAccordion"])}(),angular.module("myApp.config",[]).constant("databaseUrl","https://camabisapp.herokuapp.com"),function(){"use strict";function o(o,e,t){function n(t){o.get(e+"/api/concerns").success(function(o){t(o)}).error(function(o){console.log("Didn't get concerns properly"+o)})}function a(t,n){console.log(t),o({method:"POST",url:e+"/api/photo",headers:{"Access-Control-Allow-Origin":"*","Content-type":"application/x-www-form-urlencoded"},data:t}).success(function(o){console.log("Sucessfully posted photo.")}).error(function(o){console.log("Didn't post photo properly"+o)})}var i={getConcerns:n,postPhoto:a};return i}angular.module("app").factory("DatabaseFactory",o),o.$inject=["$http","databaseUrl","$rootScope"]}(),function(){"use strict";function o(o,e,t,n){function a(){i(),e.getConcerns(function(o){t.concernContainer=o})}function i(){o.get("jmap.json").success(function(o){t.jmap=o}).error(function(o){console.log("Didn't get jmap properly")})}function c(t){var n={method:"POST",url:"https://api.imgur.com/3/image",headers:{Authorization:"Client-ID a83b8d484886938","Content-type":"application/x-www-form-urlencoded"},data:t};o(n).then(function(o){console.log(o.data.data.link),e.postPhoto(o.data.data.link,function(){})},function(o){console.log(o)})}function r(o){l.classList.remove("active"),m.classList.remove("active"),p.classList.remove("active"),o.classList.add("active")}var s=document.querySelector("[name='upload-photo']"),l=document.querySelector("[role='goNew']"),m=document.querySelector("[role='goResolved']"),p=document.querySelector("[role='goNonissue']");n.mobile=document.documentElement.classList.contains("mobile"),t.showNav=!n.mobile,t.status="new",s.addEventListener("change",function(o){o.preventDefault();for(var e=o.target.files,t=0;t<e.length;t++){var n=e[t];if(!n.type.match(/image.*/))return alert("Only images are accepted.");c(n)}}),l.addEventListener("click",function(o){l.classList.contains("active")||r(l)}),m.addEventListener("click",function(o){m.classList.contains("active")||r(m)}),p.addEventListener("click",function(o){p.classList.contains("active")||r(p)}),r(l),a(),t.toggleNav=function(){t.showNav=!t.showNav}}angular.module("app").controller("HomeController",o),o.$inject=["$http","DatabaseFactory","$scope","$rootScope"]}(),angular.module("app").config(["$routeProvider",function(o){o.when("/",{templateUrl:"home.html",controller:"HomeController"}).otherwise({redirectTo:"/"})}]),angular.module("app").config(["$httpProvider",function(o){o.defaults.useXDomain=!0,delete o.defaults.headers.common["X-Requested-With"]}]),function(o){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(o)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(o.substr(0,4)))&&document.documentElement.classList.add("mobile")}(navigator.userAgent||navigator.vendor||window.opera);
//# sourceMappingURL=data:application/json;base64,
